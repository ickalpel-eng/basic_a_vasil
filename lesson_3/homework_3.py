# """
# ++++++++++++++++++++++++++++++++++++++++++++++++
# Задачи на input() и print()
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Простая работа с print()
# ================================================
# Выведи на экран строку "Привет, мир!".
print("Привет, мир!")
# Выведи три числа: 5, 10, 15 через пробел.
print(5, 10, 15, sep=' ')
# Выведи результат сложения 10 + 25.
print(10 + 25)
# ================================================
# 2. Использование параметров sep и end в print()
# ================================================
# Выведи числа 1, 2 и 3 через символ " & ", используя sep.
print(1, 2, 3, sep="&")
# Напечатай "Python" и "лучший язык" в разных вызовах функции print() так, чтобы они выводились в одной строке, используя параметр end.
print("Python", end=" ")
print("лучший язык")
# ================================================
# 3. Форматированный вывод с F-строками
# ================================================
# Создай переменные x = 3.14 и y = -8, затем выведи строку: Координаты точки: x = 3.14; y = -8  используя F-строку.
x = 3.14
y = -8
print(f"Координаты точки: x = {x}; y = {y}")
# Запроси у пользователя его имя и возраст, затем выведи: Имя: Иван, Возраст: 25  используя F-строку.
###name = input()
###age = input()
###  print(f"Имя: {name}, Возраст: {age}")
# ================================================
# 4. Работа с input()
# ================================================
# Запроси у пользователя его имя и выведи "Привет, <имя>!".
# name = input()
# print(f"Привет, {name}")
# ================================================
# 5. Преобразование типов
# ================================================
# Запроси у пользователя два числа, сложи их и выведи результат.
# num1,num2 = int(input()),int(input())
# print(num1 + num2)
# Запроси у пользователя целое число, выведи его квадрат.
# num3 = int(input())
# print(num3 ** 2)
# ++++++++++++++++++++++++++++++++++++++++++++++++
# Булевые значения
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Основы булевой логики
# ================================================
# Выполни следующие сравнения и выведи их результаты:
# 5 > 3
print(5 > 3)
# 10 < 2
print(10 < 2)
# 7 == 7
print(7 == 7)
# 6 != 8
print(6 != 8)
# 4 >= 4
print(4 >= 4)
# 9 <= 3
print(9 <= 3)
# Присвой результат сравнения 8 > 12 переменной res и выведи её значение и тип (type(res)).
res = 8 > 12
print(type(res))
# ================================================
# 2. Проверка четности и кратности числа
# ================================================
# Присвой переменной x значение 15.
x = 15
# Проверь, является ли x четным (x % 2 == 0) и выведи результат.
print(x % 2 == 0)
# Проверь, делится ли x на 5 без остатка.
print(x % 5 == 0)
# Проверь, делится ли x одновременно на 3 и 5.
print(x % 3 == 0 and x % 5 == 0)
# ================================================
# 3. Работа с логическими операторами (and, or, not)
# ================================================
# Создай переменную y = 4.5.
y = 4.5
# Проверь, попадает ли y в диапазон [1, 10] (используй and).
print(1 < y < 10)
# Проверь, входит ли y в один из диапозонов [0, 5] или [10, 15] (используй or).
print(0 < y < 5 or 10 < y < 15)
# Инвертируй проверку y < 5 с помощью not.
print(not(0 < y < 5 or 10 < y < 15))
# ================================================
# 4. Приоритет логических операций
# ================================================
# Вычисли и выведи результаты следующих выражений:
# True or False and False
print(True or False and False)
# not False and True
print(not False and True)
# False or not True and True
print(False or not True and True)
# not (10 > 5 or 3 < 1)
print(not(10 > 5 or 3 < 1))
# ================================================
# 5. Приведение типов к bool
# ================================================
# Определи логическое значение (bool()) для следующих значений и выведи их:
# 0
print(bool(0))
# -5
print(bool(-5))
# 3.14
print(bool(3.14))
# "" (пустая строка)
print(bool(""))
# "Python"
print(bool("Python"))
# " " (строка с пробелом)
print(bool(" "))
# ================================================
# 6. Дополнительное задание
# ================================================
# Присвой переменной n любое число и проверь, является ли оно положительным, четным и делится ли на 3.
n = 10
print(n > 0)
print(n % 2 == 0)
print(n % 3 == 0)
# ++++++++++++++++++++++++++++++++++++++++++++++++
# Срезы строк
# ++++++++++++++++++++++++++++++++++++++++++++++++
# ================================================
# 1. Доступ к символам по индексу.
# ================================================
# Создай строку s = "Программирование".
s = "Программирование"
# Выведи первый символ строки.
print(s[0])
# Выведи последний символ строки.
print(s[-1])
# Выведи третий и предпоследний символы строки.
print(s[2], s[-2])
# ================================================
# 2. Обращение к символам с проверкой границ
# ================================================
# Попробуй вывести s[100]. Что произойдет?
# print(s[100]) - ошибка
# Используй len(s), чтобы корректно обратиться к последнему символу.
print(s[len(s) - 1])
# ================================================
# 3. Создание срезов
# ================================================
# Выдели из строки s = "Программирование" первые 6 символов, запиши в переменную и выведи на экран.
print(s[0:6])
# Выдели последние 5 символов, запиши в переменную и выведи на экран.
last_5 = s[-5:]
print(last_5)
# Выдели символы с 3-го по 7-й, запиши в переменную и выведи на экран.
s_3_po_7 = s[2:7]
print(s_3_po_7)
# Выведи каждый второй символ строки.
print(s[1::2])
# Разверни строку.
print(s[::-1])
# ================================================
# 4. Работа с шагом в срезах
# ================================================
# Выведи каждый третий символ строки s = "Программирование" начиная с первого.
print(s[::3])

# Выведи строку в обратном порядке через один.
print(s[::-2])
# ================================================
# 5. Проверка неизменяемости строк
# ================================================
# Попробуй выполнить s[0] = "п". Почему возникает ошибка?
#s[0] = "н" - строки не изменяемые
# Создай новую строку s2, в которой первый символ будет заменен на "П", используя срезы.
s2 = "Дерево"
s2 = "П" + s2[1::]
print(s2)

# ================================================
# 6. Дополнительное задание
# ================================================
# Создай строку word = "abcdefgh".
word = "abcdefgh"
# Выдели из нее подстроку "cde" с помощью среза.
print(word[2:5])
# Выведи строку, где все символы расположены в обратном порядке.
print(word[::-1])
# Выведи строку без первого и последнего символов.
print(word[1:-1])
# """